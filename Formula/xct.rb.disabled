# frozen_string_literal: true

# This formula is currently a cask.
# I’d love for this formula to work, but it does not! xcodebuild tries to
# resolve SPM dependencies in a sandbox, but Homebrew already creates a sandbox.
# Building directly with swift build (which allows removing the sandbox) does
# not work either because the project has a CoreData model, which only Xcode
# knows about…
# I could create an Xcodeproj and be done with it, but it’s annoying to
# maintain. Maybe one day I’ll use XcodeTools to create XcodeTools’s xcodeproj…
# for now I’m just copying the pre-built binary and that’s all.
# Note I don’t create a bottle either because I can’t compile the program using
# homebrew at all! I could fake it, but I don’t like that.

# xct formula
class Xct < Formula
  desc "Utility for working with versions in Xcode projects"
  homepage "https://github.com/xcode-actions/XcodeTools"
  url "https://github.com/xcode-actions/XcodeTools.git", { using: :git, tag: "0.2.1", revision: "bddc0186155c612760aeaa7e55d8e8c5681f8880" }
  head "https://github.com/xcode-actions/XcodeTools.git", { using: :git, branch: "develop" }

  depends_on xcode: ["12.0", :build]

  # Does not work anymore :(
  def setup_fake_sandbox_exec
    # Workaround for sandbox errors: place a dummy sandbox-exec on PATH.
    # See: https://github.com/Homebrew/discussions/discussions/59
    build_bin = "#{buildpath}/bin"
    Dir.mkdir(build_bin)

    script = <<~SH
      #!/bin/bash
      # If a trivial sandbox command can run, then use the system sandbox.
      # FLFL: Test disabled for testing.
      if false && /usr/bin/sandbox-exec -p '(version 1)' "true"; then
        exec /usr/bin/sandbox-exec "$@"
      fi
      # If a trivial sandbox command fails, we may already be in a sandbox, so
      # don’t initialize a new sandbox.
      while getopts ":f:n:p:D:" opt; do :; done
      shift $((OPTIND -1))
      exec "$@"
    SH
    File.write("#{build_bin}/sandbox-exec", script, perm: 0755)
    ENV["PATH"] = "#{build_bin}:#{ENV["PATH"]}"
  end

  def install
    setup_fake_sandbox_exec
    xcodebuild "archive", "-workspace", "XcodeTools.xcworkspace", "-scheme", "hagvtool",
               "-configuration", "Release", "-disableAutomaticPackageResolution", "-archivePath",
               "#{buildpath}/archive.xcarchive", "SYMROOT=build"

    bin.install "#{buildpath}/archive.xcarchive/Products/usr/local/bin/hagvtool"
    # TODO: Install XcodeTools_XcodeProjKit.bundle too!
  end

  test do
    system bin/"hagvtool", "--help"
  end
end
